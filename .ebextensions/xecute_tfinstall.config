commands:
  create_post_dir:
    command: "mkdir /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true
files:
  /opt/elasticbeanstalk/hooks/appdeploy/post/tf_install.sh:
    mode: "000755"
    owner: root
    group: root
    content: |-
      #!/usr/bin/env bash
      # from: https://gist.github.com/asimihsan/1ab916e8db9dd2e3b363d4fc4cb00478

      # update OS
      sudo apt-get -y update
      sudo DEBIAN_FRONTEND=noninteractive apt-get -y \
          -o Dpkg::Options::="--force-confdef" \
          -o Dpkg::Options::="--force-confold" \
          dist-upgrade
      sudo apt-get install -y build-essential g++ gcc gfortran wget git \
          linux-image-generic linux-headers-generic libopenblas-dev htop \
          libfreetype6-dev libxft-dev libncurses-dev libblas-dev \
          liblapack-dev libatlas-base-dev linux-image-extra-virtual unzip \
          swig pkg-config zip zlib1g-dev libcurl3-dev

      # test this has some output, proving you have an NVIDIA GPU
      lspci -nnk | grep -i nvidia

      # install CUDA 8
      wget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda-repo-ubuntu1604-8-0-local_8.0.44-1_amd64-deb
      sudo dpkg -i cuda-repo-ubuntu1604-8-0-local_8.0.44-1_amd64-deb
      sudo DEBIAN_FRONTEND=noninteractive apt-get -y \
          -o Dpkg::Options::="--force-confdef" \
          -o Dpkg::Options::="--force-confold" update
      sudo DEBIAN_FRONTEND=noninteractive apt-get -y \
          -o Dpkg::Options::="--force-confdef" \
          -o Dpkg::Options::="--force-confold" install cuda
      rm -f cuda-repo-ubuntu1604-8-0-local_8.0.44-1_amd64-deb
      sudo apt-get install -y libcupti-dev
      tee $HOME/.bash_aliases 2>&1 >/dev/null <<EOF
      export CUDA_HOME=/usr/local/cuda
      export CUDA_ROOT=/usr/local/cuda
      export PATH=$PATH:$CUDA_ROOT/bin
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$CUDA_ROOT/lib64:$CUDA_ROOT/extras/CUPTI/lib64
      EOF
      source ~/.bashrc

      # install nvidia driver, TODO will not override older 367.57 installation,
      # is there a way to do so?
      cd $HOME
      wget http://us.download.nvidia.com/XFree86/Linux-x86_64/375.39/NVIDIA-Linux-x86_64-375.39.run
      sudo chmod a+x NVIDIA-Linux-x86_64-375.39.run
      sudo ./NVIDIA-Linux-x86_64-375.39.run --silent
      rm -f NVIDIA-Linux-x86_64-375.39.run

      # confirm the NVIDIA driver is installed correctly
      nvidia-smi

      # install cudnn. i signed up to the NVIDIA developer program, downloaded
      # these files, and uploaded them to my own S3 bucket.
      cd $HOME
      wget https://s3-us-west-2.amazonaws.com/aifiles-us-west-2/nvidia-cudnn/cudnn-8.0-linux-x64-v5.1.tgz
      tar -xvf cudnn-8.0-linux-x64-v5.1.tgz
      sudo cp cuda/lib64/* /usr/local/cuda/lib64
      sudo cp cuda/include/cudnn.h /usr/local/cuda/include
      rm -f cudnn-8.0-linux-x64-v5.1.tgz
      rm -rf cuda

      wget https://s3-us-west-2.amazonaws.com/aifiles-us-west-2/nvidia-cudnn/libcudnn5_5.1.10-1%2Bcuda8.0_amd64.deb
      sudo dpkg -i libcudnn5_5.1.10-1+cuda8.0_amd64.deb
      rm -f libcudnn5_5.1.10-1+cuda8.0_amd64.deb

      wget https://s3-us-west-2.amazonaws.com/aifiles-us-west-2/nvidia-cudnn/libcudnn5-dev_5.1.10-1%2Bcuda8.0_amd64.deb
      sudo dpkg -i libcudnn5-dev_5.1.10-1+cuda8.0_amd64.deb
      rm -f libcudnn5-dev_5.1.10-1+cuda8.0_amd64.deb

      # install anaconda and dependencies
      cd $HOME
      ANACONDA_INSTALLER=Anaconda3-4.3.0-Linux-x86_64.sh
      wget https://repo.continuum.io/archive/$ANACONDA_INSTALLER
      bash $ANACONDA_INSTALLER -b -p $HOME/anaconda -f
      rm -f $ANACONDA_INSTALLER
      CONDA=$HOME/anaconda/bin/conda
      $CONDA install -y ipython jupyter pandas numpy scipy matplotlib \
          scikit-learn cython nltk tqdm

      # -----------------------------------------------------------------------------
      # 1a) this is how to install pre-built GPU version of tensorflow
      # -----------------------------------------------------------------------------
      PIP=$HOME/anaconda/bin/pip
      $PIP install --ignore-installed --upgrade --force \
          https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.0.0-cp36-cp36m-linux_x86_64.whl
